<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ganbro.mapper.BookMapper">
    <delete id="deleteBookDetailByBookInfo">
        DELETE from book_details
        where book_name = #{bookInfo.bookName} and publisher = #{bookInfo.publisher}
    </delete>

    <select id="selectByBookNameAndPublisher" parameterType="map" resultType="com.ganbro.domain.entity.BookInfo">
        SELECT * FROM book_info WHERE book_name = #{bookName} AND publisher = #{publisher}
    </select>

    <select id="selectBookInfoIdByBookNameAndPublisher" parameterType="map" resultType="int">
        SELECT book_info_id FROM book_info WHERE book_name = #{bookName} AND publisher = #{publisher}
    </select>
    <select id="selectBookDetailByBookInfo" resultType="com.ganbro.domain.entity.BookDetail">
        select * from book_details where book_name = #{bookInfo.bookName} and publisher = #{bookInfo.publisher}
    </select>
    <update id="addTotalInventoryById">
        UPDATE book_info SET total_inventory = total_inventory + #{totalInventory} WHERE book_info_id = #{id}
    </update>

    <update id="addAvailableBooksById">
        UPDATE book_info SET available_books = available_books + #{availableBooks} WHERE book_info_id = #{id}
    </update>

    <insert id="insertByBookInfo" parameterType="com.ganbro.domain.entity.BookInfo">
        INSERT INTO book_info(book_name, publisher, publish_date, total_inventory, available_books)
        VALUES(#{bookName}, #{publisher}, #{publishDate}, #{totalInventory}, #{availableBooks})
    </insert>

    <insert id="insertByBookDetailAndCnt" parameterType="map">
        INSERT INTO book_details (book_id, book_name, publisher, publish_date, is_borrowed, user_id, start_date, due_date)
        VALUES
            (#{bookDetail.bookId}, #{bookDetail.bookName}, #{bookDetail.publisher}, #{bookDetail.publishDate}, #{bookDetail.isBorrowed}, #{bookDetail.userId}, #{bookDetail.startDate}, #{bookDetail.dueDate})
    </insert>

    <update id="updateByBookInfo" parameterType="com.ganbro.domain.entity.BookInfo">
        UPDATE book_info
        SET book_name = #{bookInfo.bookName},
            publisher = #{bookInfo.publisher},
            publish_date = #{bookInfo.publishDate},
            total_inventory = #{bookInfo.totalInventory},
            available_books = CASE WHEN (available_books - #{sub}) > 0 THEN (available_books - #{sub}) ELSE 0 END
        WHERE book_info_id = #{bookInfo.bookInfoId}
    </update>
    <update id="updateByBookDetail">
        UPDATE book_details
        SET book_name = #{bookDetail.bookName},
        publisher = #{bookDetail.publisher},
        publish_date = #{bookDetail.publishDate},
        is_borrowed = #{bookDetail.isBorrowed},
        user_id = #{bookDetail.userId},
        start_date = #{bookDetail.startDate},
        due_date = #{bookDetail.dueDate}
        WHERE book_id = #{bookDetail.bookId}
    </update>
    <update id="updateBookInfo">
        UPDATE book_info
        SET book_name = #{bookInfo.bookName},
            publisher = #{bookInfo.publisher},
            publish_date = #{bookInfo.publishDate},
            total_inventory = #{bookInfo.totalInventory},
            available_books = #{bookInfo.availableBooks}
        WHERE book_info_id = #{bookInfo.bookInfoId}
    </update>
    <update id="returnBookDetails">
        UPDATE book_details
        SET is_borrowed = 0,
            user_id = null,
            start_date = null,
            due_date = null
        WHERE book_id = #{bookId}
    </update>


</mapper>